{"version":3,"sources":["FeaturesObject.js","FeaturesOption.js","Features.js","App.js","CustomForm.js","index.js"],"names":["FeaturesObject","Processor","name","cost","Operating System","Video Card","Display","_this","this","Object","keys","props","map","feature","idx","featureHash","options","item","itemHash","slugify","JSON","stringify","react_default","a","createElement","key","className","type","id","checked","selected","onChange","e","updateFeature","htmlFor","USCurrencyFormat","format","React","Component","Features","FeaturesOption_FeaturesObject","FEATURES","Intl","NumberFormat","style","currency","App","state","newValue","assign","setState","_this2","features","summary","selectedOption","total","reduce","acc","curr","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3afc34b5.chunk.js","sourcesContent":["/* FEATURES object can be imported directly to other files */\nconst FeaturesObject = {\n    Processor: [\n      {\n        name: '17th Generation Intel Core HB (7 Core with donut spare)',\n        cost: 700\n      },\n      {\n        name: 'Professor X AMD Fire Breather with sidewinder technology',\n        cost: 1200\n      }\n    ],\n    \"Operating System\": [\n      {\n        name: 'Ubuntu Linux 16.04',\n        cost: 200\n      },\n      {\n        name: 'Bodhi Linux',\n        cost: 300\n      }\n    ],\n    \"Video Card\": [\n      {\n        name: 'Toyota Corolla 1.5v',\n        cost: 1150.98\n      },\n      {\n        name: 'Mind mild breeze 2000',\n        cost: 1345\n      }\n    ],\n    Display: [\n      {\n        name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n        cost: 1500\n      },\n      {\n        name: '15.3\" HGTV (3840 x 2160) Home makeover edition',\n        cost: 1400\n      },\n    ]\n  }\n\n\n\nexport default FeaturesObject","import React from 'react';\n// Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\nimport slugify from 'slugify';\n\n\nexport default class FeaturesObject extends React.Component{\n    render(){\n        return(\n            Object.keys(this.props.FeaturesObject).map((feature, idx) => {\n                const featureHash = feature + '-' + idx;\n                const options = this.props.FeaturesObject[feature].map(item => {\n                  const itemHash = slugify(JSON.stringify(item));\n                  return (\n                    <div key={itemHash} className=\"feature__item\">\n                      <input\n                        type=\"radio\"\n                        id={itemHash}\n                        className=\"feature__option\"\n                        name={slugify(feature)}\n                        checked={item.name === this.props.selected[feature].name}\n                        onChange={e => this.props.updateFeature(feature, item)}\n                      />\n                      <label htmlFor={itemHash} className=\"feature__label\">\n                        {item.name} ({this.props.USCurrencyFormat.format(item.cost)})\n                      </label>\n                    </div>\n                  );\n                });\n            \n                return (\n                  <fieldset className=\"feature\" key={featureHash}>\n                    <legend className=\"feature__name\">\n                      <h3>{feature}</h3>\n                    </legend>\n                    {options}\n                  </fieldset>\n                );\n              })\n        )\n    }\n}\n","import React from 'react';\nimport FeaturesOption from './FeaturesOption';\n\n\n\nclass Features extends React.Component{\n    \n    render() {\n        \n        return(\n            <div>\n              <h2>Customize your laptop</h2>\n            <FeaturesOption\n            selected={this.props.selected} \n            updateFeature={this.props.updateFeature} \n            USCurrencyFormat={this.props.USCurrencyFormat} \n            FEATURES={this.props.FEATURES}\n            />\n            </div>\n        )\n    }\n\n}\n\n\nexport default Features;","import React, { Component } from 'react';\n//import Cart from './Cart'\nimport CustomForm from './CustomForm'\n// Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\nimport slugify from 'slugify';\n\nimport './App.css';\n\n// This object will allow us to\n// easily convert numbers into US dollar values\nconst USCurrencyFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\n\nclass App extends Component {\n  state = {\n    selected: {\n      Processor: {\n        name: '17th Generation Intel Core HB (7 Core with donut spare)',\n        cost: 700\n      },\n      'Operating System': {\n        name: 'Ubuntu Linux 16.04',\n        cost: 200\n      },\n      'Video Card': {\n        name: 'Toyota Corolla 1.5v',\n        cost: 1150.98\n      },\n      Display: {\n        name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n        cost: 1500\n      }\n    }\n  };\n\n  updateFeature = (feature, newValue) => {\n    const selected = Object.assign({}, this.state.selected);\n    selected[feature] = newValue;\n    this.setState({\n      selected\n    });\n  };\n\n  render() {\n    const features = Object.keys(this.props.features).map((feature, idx) => {\n      const featureHash = feature + '-' + idx;\n      const options = this.props.features[feature].map(item => {\n        const itemHash = slugify(JSON.stringify(item));\n        return (\n          <div key={itemHash} className=\"feature__item\">\n            <input\n              type=\"radio\"\n              id={itemHash}\n              className=\"feature__option\"\n              name={slugify(feature)}\n              checked={item.name === this.state.selected[feature].name}\n              onChange={e => this.updateFeature(feature, item)}\n            />\n            <label htmlFor={itemHash} className=\"feature__label\">\n              {item.name} ({USCurrencyFormat.format(item.cost)})\n            </label>\n          </div>\n        );\n      });\n\n      return (\n        <fieldset className=\"feature\" key={featureHash}>\n          <legend className=\"feature__name\">\n            <h3>{feature}</h3>\n          </legend>\n          {options}\n        </fieldset>\n      );\n    });\n\n    const summary = Object.keys(this.state.selected).map((feature, idx) => {\n      const featureHash = feature + '-' + idx;\n      const selectedOption = this.state.selected[feature];\n\n      return (\n        <div className=\"summary__option\" key={featureHash}>\n          <div className=\"summary__option__label\">{feature} </div>\n          <div className=\"summary__option__value\">{selectedOption.name}</div>\n          <div className=\"summary__option__cost\">\n            {USCurrencyFormat.format(selectedOption.cost)}\n          </div>\n        </div>\n      );\n    });\n\n    const total = Object.keys(this.state.selected).reduce(\n      (acc, curr) => acc + this.state.selected[curr].cost,\n      0\n    );\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>ELF Computing | Laptops</h1>\n        </header>\n        <main>\n          <form className=\"main__form\">\n            <h2>Customize your laptop</h2>\n            {features}\n          </form>\n          <section className=\"main__summary\">\n            <h2>Your cart</h2>\n            {summary}\n            <div className=\"summary__total\">\n              <div className=\"summary__total__label\">Total</div>\n              <div className=\"summary__total__value\">\n                {USCurrencyFormat.format(total)}\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport FeaturesObject from './FeaturesObject';\nimport Features from './Features';\n\n\n\nclass CustomForm extends React.Component{\n    render(){\n        return(\n            <form className=\"main__form\">\n            <Features selected={this.props.selected} \n            updateFeature={this.props.updateFeature} \n            USCurrencyFormat={this.props.USCurrencyFormat}\n            FeaturesObject={FeaturesObject}\n            /> \n            </form>\n            \n        )\n    }\n}\n\nexport default CustomForm;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst FEATURES = {\n  Processor: [\n    {\n      name: '17th Generation Intel Core HB (7 Core with donut spare)',\n      cost: 700\n    },\n    {\n      name: 'Professor X AMD Fire Breather with sidewinder technology',\n      cost: 1200\n    }\n  ],\n  \"Operating System\": [\n    {\n      name: 'Ubuntu Linux 16.04',\n      cost: 200\n    },\n    {\n      name: 'Bodhi Linux',\n      cost: 300\n    }\n  ],\n  \"Video Card\": [\n    {\n      name: 'Toyota Corolla 1.5v',\n      cost: 1150.98\n    },\n    {\n      name: 'Mind mild breeze 2000',\n      cost: 1345\n    }\n  ],\n  Display: [\n    {\n      name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n      cost: 1500\n    },\n    {\n      name: '15.3\" HGTV (3840 x 2160) Home makeover edition',\n      cost: 1400\n    },\n  ]\n};\n\nReactDOM.render(<App features={FEATURES}/>, document.getElementById('root'));\n"],"sourceRoot":""}